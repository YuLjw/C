C语言中的常量分为：
字面常量
const 修饰的常变量
#define 定义的标识符常量
枚举常量

一、字面常量
也就是打出的不可变的量
比如：10，95.6

————————————————————————————

二、const 修饰的常变量
#include <stdio.h>

int main()
{
  const int age = 16;//此时添加了 const ，再运行代码就会报错
  因为 const 是常属性，也就是为 age 添加一个常属性，此时 age 为常变量，所以下面的 age = 17不可存在，输出的结果也只能是16
  常变量：相当于多了一个属性，但 age 本质上还是一个变量
  printf("%d\n",age);
  age = 17;//此时运行代码，会出现16和17两个数，因为 age 是个变量
  printf("%d\n",age);
  return 0;
}

——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

三、#define 定义的标识符常量
#include <stdio.h>
#define MAX 10//定义一个常量，后面跟的数字是常量内装的值

int main()
{
  int arr[MAX] = {0};//这里使用数组，因为MAX是常量，所以可以填写进 []
  printf("%d\n",MAX);
  return 0;
}

运行这串代码，得出的值为常量的值：10

—————————————————————————————————————————————————————————————————————

四、枚举常量
枚举：一一举例
不如：性别：男、女、保密
#include <stdio.h>
enum Sex//定义常量 Sex ，里面一一列举了性别有哪些
{
  nan;
  nv;
  baomi
}

int main()
{
  enum Sex s = nv;\\申请一个变量，此时就可以在常量中指定变量的值
  s = nan;\\此时的变量 s 改为 nan ，所以打印出来的值则是 nan 的值
  printf("%d\n",s);此时在打印变量，就会得出一个值，这个值在枚举常量中是不可变的，指定的
  printf("%d\n",nan);\\0
  printf("%d\n",nv);\\1
  printf("%d\n",baomi);\\2
  return 0;
}
